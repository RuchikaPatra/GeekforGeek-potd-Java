class Solution {
    public static ArrayList<Integer> getDistinctDifference(int N, int[] A) {
        // code here
    ArrayList<Integer> ans = new ArrayList<>();
    
    /*Initialize an empty HashSet to store the distinct elements on the right 
    side of each index */
    Set<Integer> rightSet = new HashSet<>();
    
    /*Initialize integer array used to store the number of distinct elements on 
    the right side of each index*/
    int[] distSize = new int[N];
    
    // Calculate the number of distinct elements on the right side of each index
    for (int i = N-1; i >= 0; i--) {
        distSize[i] = rightSet.size();
        rightSet.add(A[i]);
    }
    
    /* Initialize an empty HashSet to store the distinct elements on the left side of 
    each index*/
    Set<Integer> leftSet = new HashSet<>();
    
    /* Calculate the difference in the number of distinct elements on the left 
    and right sides of each index */
    for (int i = 0; i < N; i++) {
        int diff = leftSet.size() - distSize[i];
        leftSet.add(A[i]);
        ans.add(diff);
    }
    
    // Return the ArrayList containing the results
    return ans;
    }
}
