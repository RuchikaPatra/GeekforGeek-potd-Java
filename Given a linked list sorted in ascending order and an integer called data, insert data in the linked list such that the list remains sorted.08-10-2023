class Solution {
     Node sortedInsert(Node head1, int key) {
        // Add your code here.
        Node d=new Node(Integer.MIN_VALUE);
        Node p=d;
        d.next=head1;
        Node h=head1;
        if(key>head1.data&&key<head1.next.data&&head1.next.next==null){
Node n=new Node(key);
n.next=head1.next;
head1.next=n;
return head1;
}
while(h.next!=null){
    
    
    if(p.data<=key&&key<h.data){
        Node n=new Node(key);
        n.next=h;
        p.next=n;
        return d.next;
      
        
    }
    p=p.next;
    h=h.next;
if(h.next==null&&p.data<=key&&key<h.data){
         Node n=new Node(key);
        n.next=h;
        p.next=n;
        return d.next;
        
    }
    
}

if(key>=h.data){
    h.next=new Node(key);
    return d.next;
}
return d.next;
    }
}
