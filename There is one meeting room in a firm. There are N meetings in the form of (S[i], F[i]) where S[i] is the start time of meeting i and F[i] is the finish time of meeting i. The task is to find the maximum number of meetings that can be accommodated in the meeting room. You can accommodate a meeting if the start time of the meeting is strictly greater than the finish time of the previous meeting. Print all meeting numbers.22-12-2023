class Solution {
    public static ArrayList<Integer> maxMeetings(int N, int[] S, int[] F) {
        // code here
        int A[][] = new int[S.length][3] ;
        for(int i = 0; i < S.length; i++){
            A[i][0] = S[i] ;
            A[i][1] = F[i] ;
            A[i][2] = i + 1;
        }
        Arrays.sort(A, Comparator.comparingDouble(o -> o[0])) ;
        Arrays.sort(A, Comparator.comparingDouble(o -> o[1])) ;
        
        int i = 0 ;
        int j = 1 ;
        ArrayList<Integer> AL = new ArrayList<Integer>() ;
        int endTime = A[i][1] ;
        while(j < A.length){
            while(j < A.length && endTime >= A[j][0]){
                j = j + 1 ;
            }
            if(j < A.length && endTime < A[j][0]){
                endTime = A[j][1] ;
                AL.add(A[i][2]) ;
                i = j ;
                j = j + 1 ;
            }
        }
        AL.add(A[i][2]) ;
        Collections.sort(AL) ;
        return AL ;
    }
}
