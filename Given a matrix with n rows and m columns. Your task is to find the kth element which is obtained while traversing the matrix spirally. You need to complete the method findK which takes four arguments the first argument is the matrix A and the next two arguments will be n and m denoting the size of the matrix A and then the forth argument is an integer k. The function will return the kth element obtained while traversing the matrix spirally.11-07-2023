class Solution
{
    /*You are required to complete this method*/
    int findK(int A[][], int n, int m, int k)
    {
	// Your code here	
	int left = 0, right = m-1;
	    int top = 0, bottom = n-1;
	    
	    int d = 0; //direction
	    
	    while(left<=right && top<=bottom) {
	        if(d == 0) {
	            for(int i=left; i<=right; i++) {
	                if(--k == 0) {
	                    return A[top][i];
	                }
	            }
	            top++;
	            d = 1;
	        }
	        
	        else if(d == 1) {
	            for(int i=top; i<=bottom; i++) {
	                if(--k == 0) {
	                    return A[i][right];
	                }
	            }
	            right--;
	            d = 2; 
	        }
	        
	        else if(d == 2) {
	            for(int i=right; i>= left; i--) {
	                if(--k == 0) {
	                    return A[bottom][i];
	                }
	            }
	            bottom--;
	            d = 3;
	        }
	        
	        else if(d == 3) {
	            for(int i=bottom; i>=top; i--) {
	                if(--k == 0) {
	                    return A[i][left];
	                }
	            }
	            left++;
	            d = 0; 
	        }
	    }
	    return -1;
    }
}
